// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)
varying     vec4 _c8_0;
varying     vec4 _c6_7;
varying     vec4 _c4_5;
varying     vec4 _c2_3;
varying     vec4 _c0_1;
varying     vec4 _dx_dy;
varying     vec4 _g1_2;
varying     vec2 VARpixcoord;


struct tex_coords {
    vec2 VARpixcoord;
    vec4 _g1_2;
    vec4 _dx_dy;
    vec4 _c0_1;
    vec4 _c2_3;
    vec4 _c4_5;
    vec4 _c6_7;
    vec4 _c8_0;
};

struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
};

vec4 _oPosition1;
tex_coords _coords1;
uniform mat4 MVPMatrix;
input_dummy _IN1;
vec4 _r0019;
attribute vec4 VertexCoord;
attribute vec4 COLOR;
attribute vec4 TexCoord;
varying vec4 TEX0;
varying vec4 COL0;
varying vec4 TEX1;
varying vec4 TEX2;
varying vec4 TEX3;
varying vec4 TEX4;
varying vec4 TEX5;
varying vec4 TEX6;
varying vec4 TEX7;

 

         mat4 transpose_(mat4 matrix)
         {
            mat4 ret;
            for (int i = 0; i != 4; i++)
               for (int j = 0; j != 4; j++)
                  ret[i][j] = matrix[j][i];

            return ret;
         }
         
uniform int FrameDirection;
uniform int FrameCount;
#ifdef GL_ES
uniform mediump vec2 OutputSize;
uniform mediump vec2 TextureSize;
uniform mediump vec2 InputSize;
#else
uniform vec2 OutputSize;
uniform vec2 TextureSize;
uniform vec2 InputSize;
#endif
void main()
{
    mat4 MVPMatrix_ = transpose_(MVPMatrix);

    vec2 _oTex;
    vec4 _oColor;
    vec2 _ps;
    vec2 _dx;
    vec2 _dy;
    vec2 _g1;
    vec2 _g2;
    vec2 _TMP3;
    vec2 _TMP4;
    vec2 _TMP5;
    vec2 _TMP6;
    vec2 _TMP8;
    vec2 _TMP9;
    vec2 _TMP10;
    vec2 _TMP11;
    vec2 _TMP12;
    tex_coords _TMP17;

    _r0019.x = dot(MVPMatrix_[0], VertexCoord);
    _r0019.y = dot(MVPMatrix_[1], VertexCoord);
    _r0019.z = dot(MVPMatrix_[2], VertexCoord);
    _r0019.w = dot(MVPMatrix_[3], VertexCoord);
    _oPosition1 = _r0019;
    _oColor = COLOR;
    _oTex = TexCoord.xy;
    _ps = 1.00000000E+000/TextureSize;
    _dx = vec2(_ps.x, 0.00000000E+000);
    _dy = vec2(0.00000000E+000, _ps.y);
    _g1 = vec2(_ps.x, _ps.y);
    _g2 = vec2(-_ps.x, _ps.y);
    _TMP17.VARpixcoord = TexCoord.xy*TextureSize;
    _TMP17._g1_2 = vec4(_g1.x, _g1.y, _g2.x, _g2.y);
    _TMP17._dx_dy = vec4(_dx.x, _dx.y, _dy.x, _dy.y);
    _TMP11 = TexCoord.xy - _g1;
    _TMP12 = TexCoord.xy - _dy;
    _TMP17._c0_1 = vec4(_TMP11.x, _TMP11.y, _TMP12.x, _TMP12.y);
    _TMP9 = TexCoord.xy - _g2;
    _TMP10 = TexCoord.xy - _dx;
    _TMP17._c2_3 = vec4(_TMP9.x, _TMP9.y, _TMP10.x, _TMP10.y);
    _TMP8 = TexCoord.xy + _dx;
    _TMP17._c4_5 = vec4(TexCoord.x, TexCoord.y, _TMP8.x, _TMP8.y);
    _TMP5 = TexCoord.xy + _g2;
    _TMP6 = TexCoord.xy + _dy;
    _TMP17._c6_7 = vec4(_TMP5.x, _TMP5.y, _TMP6.x, _TMP6.y);
    _TMP3 = TexCoord.xy + _g1;
    _TMP4 = TexCoord.xy + _g2 + _dy;
    _TMP17._c8_0 = vec4(_TMP3.x, _TMP3.y, _TMP4.x, _TMP4.y);
    VARpixcoord = _TMP17.VARpixcoord;
    _coords1._g1_2 = _TMP17._g1_2;
    _coords1._dx_dy = _TMP17._dx_dy;
    _coords1._c0_1 = _TMP17._c0_1;
    _coords1._c2_3 = _TMP17._c2_3;
    _coords1._c4_5 = _TMP17._c4_5;
    _coords1._c6_7 = _TMP17._c6_7;
    _coords1._c8_0 = _TMP17._c8_0;
    gl_Position = _r0019;
    TEX0.xy = TexCoord.xy;
    COL0 = COLOR;
    TEX1 = _TMP17._g1_2;
    TEX2 = _TMP17._dx_dy;
    TEX3 = _TMP17._c0_1;
    TEX4 = _TMP17._c2_3;
    TEX5 = _TMP17._c4_5;
    TEX6 = _TMP17._c6_7;
    TEX7 = _TMP17._c8_0;
} 
#elif defined(FRAGMENT)
#ifdef GL_ES
precision mediump float;
#endif
varying     vec4 _c8_0;
varying     vec4 _c6_7;
varying     vec4 _c4_5;
varying     vec4 _c2_3;
varying     vec4 _c0_1;
varying     vec4 _dx_dy;
varying     vec4 _g1_2;
varying     vec2 VARpixcoord;


struct tex_coords {
    vec2 VARpixcoord;
    vec4 _g1_2;
    vec4 _dx_dy;
    vec4 _c0_1;
    vec4 _c2_3;
    vec4 _c4_5;
    vec4 _c6_7;
    vec4 _c8_0;
};

struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
};

vec4 _ret_0;
float _TMP25;
float _TMP26;
vec4 _TMP15;
vec4 _TMP14;
vec4 _TMP13;
vec4 _TMP12;
vec4 _TMP11;
vec4 _TMP10;
vec4 _TMP9;
vec4 _TMP8;
vec4 _TMP7;
vec4 _TMP6;
vec4 _TMP5;
vec4 _TMP4;
vec4 _TMP3;
vec4 _TMP2;
vec4 _TMP1;
vec4 _TMP0;
tex_coords _co1;
uniform sampler2D Texture;
int _x0137;
int _y0137;
int _r0137;
int _x0139;
int _y0139;
int _r0139;
int _x0141;
int _y0141;
int _r0141;
int _x0143;
int _y0143;
int _r0143;
varying vec4 TEX1;
varying vec4 TEX2;
varying vec4 TEX3;
varying vec4 TEX4;
varying vec4 TEX5;
varying vec4 TEX6;
varying vec4 TEX7;
varying vec4 TEX0;

 
uniform int FrameDirection;
uniform int FrameCount;
#ifdef GL_ES
uniform mediump vec2 OutputSize;
uniform mediump vec2 TextureSize;
uniform mediump vec2 InputSize;
#else
uniform vec2 OutputSize;
uniform vec2 TextureSize;
uniform vec2 InputSize;
#endif
void main()
{

    vec2 _fp;
    vec4 _d1_2;
    vec4 _d3_4;
    vec4 _d5_6;
    vec3 _C0;
    vec3 _C1;
    vec3 _C2;
    vec3 _D3;
    vec3 _C3;
    vec3 _C4;
    vec3 _C5;
    vec3 _D4;
    vec3 _C6;
    vec3 _C7;
    vec3 _C8;
    vec3 _D5;
    vec3 _D0;
    vec3 _D1;
    vec3 _D2;
    vec3 _D6;
    vec3 _p00;
    vec3 _p10;
    vec3 _p01;
    vec3 _p11;
    float _c0;
    float _c1;
    float _c2;
    float _c3;
    float _c4;
    float _c5;
    float _c6;
    float _c7;
    float _c8;
    float _d0;
    float _d1;
    float _d2;
    float _d3;
    float _d4;
    float _d5;
    float _d6;
    int _r1;
    vec2 _TMP32;
    vec2 _TMP33;
    vec2 _TMP34;
    vec2 _TMP35;
    vec2 _TMP36;
    vec2 _TMP37;

    _fp = fract(VARpixcoord);
    _TMP36 = TEX0.xy + TEX1.xy + TEX1.zw;
    _TMP37 = TEX0.xy + TEX1.xy + TEX2.zw;
    _d1_2 = vec4(_TMP36.x, _TMP36.y, _TMP37.x, _TMP37.y);
    _TMP34 = (TEX0.xy - TEX1.zw) + TEX2.xy;
    _TMP35 = (TEX0.xy + TEX1.xy) - TEX1.zw;
    _d3_4 = vec4(_TMP34.x, _TMP34.y, _TMP35.x, _TMP35.y);
    _TMP32 = TEX0.xy + TEX1.xy + TEX2.xy;
    _TMP33 = TEX0.xy + 2.00000000E+000*TEX1.xy;
    _d5_6 = vec4(_TMP32.x, _TMP32.y, _TMP33.x, _TMP33.y);
    _TMP0 = texture2D(Texture, TEX3.xy);
    _C0 = vec3(float(_TMP0.x), float(_TMP0.y), float(_TMP0.z));
    _TMP1 = texture2D(Texture, TEX3.zw);
    _C1 = vec3(float(_TMP1.x), float(_TMP1.y), float(_TMP1.z));
    _TMP2 = texture2D(Texture, TEX4.xy);
    _C2 = vec3(float(_TMP2.x), float(_TMP2.y), float(_TMP2.z));
    _TMP3 = texture2D(Texture, _d3_4.xy);
    _D3 = vec3(float(_TMP3.x), float(_TMP3.y), float(_TMP3.z));
    _TMP4 = texture2D(Texture, TEX4.zw);
    _C3 = vec3(float(_TMP4.x), float(_TMP4.y), float(_TMP4.z));
    _TMP5 = texture2D(Texture, TEX5.xy);
    _C4 = vec3(float(_TMP5.x), float(_TMP5.y), float(_TMP5.z));
    _TMP6 = texture2D(Texture, TEX5.zw);
    _C5 = vec3(float(_TMP6.x), float(_TMP6.y), float(_TMP6.z));
    _TMP7 = texture2D(Texture, TEX5.zw);
    _D4 = vec3(float(_TMP7.x), float(_TMP7.y), float(_TMP7.z));
    _TMP8 = texture2D(Texture, TEX6.xy);
    _C6 = vec3(float(_TMP8.x), float(_TMP8.y), float(_TMP8.z));
    _TMP9 = texture2D(Texture, TEX6.zw);
    _C7 = vec3(float(_TMP9.x), float(_TMP9.y), float(_TMP9.z));
    _TMP10 = texture2D(Texture, TEX7.xy);
    _C8 = vec3(float(_TMP10.x), float(_TMP10.y), float(_TMP10.z));
    _TMP11 = texture2D(Texture, _d5_6.xy);
    _D5 = vec3(float(_TMP11.x), float(_TMP11.y), float(_TMP11.z));
    _TMP12 = texture2D(Texture, TEX7.zw);
    _D0 = vec3(float(_TMP12.x), float(_TMP12.y), float(_TMP12.z));
    _TMP13 = texture2D(Texture, _d1_2.xy);
    _D1 = vec3(float(_TMP13.x), float(_TMP13.y), float(_TMP13.z));
    _TMP14 = texture2D(Texture, _d1_2.zw);
    _D2 = vec3(float(_TMP14.x), float(_TMP14.y), float(_TMP14.z));
    _TMP15 = texture2D(Texture, _d5_6.zw);
    _D6 = vec3(float(_TMP15.x), float(_TMP15.y), float(_TMP15.z));
    _TMP26 = dot(vec3(float(_C0.x), float(_C0.y), float(_C0.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _c0 = float(_TMP25);
    _TMP26 = dot(vec3(float(_C1.x), float(_C1.y), float(_C1.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _c1 = float(_TMP25);
    _TMP26 = dot(vec3(float(_C2.x), float(_C2.y), float(_C2.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _c2 = float(_TMP25);
    _TMP26 = dot(vec3(float(_C3.x), float(_C3.y), float(_C3.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _c3 = float(_TMP25);
    _TMP26 = dot(vec3(float(_C4.x), float(_C4.y), float(_C4.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _c4 = float(_TMP25);
    _TMP26 = dot(vec3(float(_C5.x), float(_C5.y), float(_C5.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _c5 = float(_TMP25);
    _TMP26 = dot(vec3(float(_C6.x), float(_C6.y), float(_C6.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _c6 = float(_TMP25);
    _TMP26 = dot(vec3(float(_C7.x), float(_C7.y), float(_C7.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _c7 = float(_TMP25);
    _TMP26 = dot(vec3(float(_C8.x), float(_C8.y), float(_C8.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _c8 = float(_TMP25);
    _TMP26 = dot(vec3(float(_D0.x), float(_D0.y), float(_D0.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _d0 = float(_TMP25);
    _TMP26 = dot(vec3(float(_D1.x), float(_D1.y), float(_D1.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _d1 = float(_TMP25);
    _TMP26 = dot(vec3(float(_D2.x), float(_D2.y), float(_D2.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _d2 = float(_TMP25);
    _TMP26 = dot(vec3(float(_D3.x), float(_D3.y), float(_D3.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _d3 = float(_TMP25);
    _TMP26 = dot(vec3(float(_D4.x), float(_D4.y), float(_D4.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _d4 = float(_TMP25);
    _TMP26 = dot(vec3(float(_D5.x), float(_D5.y), float(_D5.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _d5 = float(_TMP25);
    _TMP26 = dot(vec3(float(_D6.x), float(_D6.y), float(_D6.z)), vec3( 6.55360000E+004, 2.55000000E+002, 1.00000000E+000));
    _TMP25 = float(_TMP26);
    _d6 = float(_TMP25);
    if (_c7 == _c5 && _c4 != _c8) { 
        _p01 = vec3(float(_C7.x), float(_C7.y), float(_C7.z));
        _p11 = _p01;
    } else {
        if (_c4 == _c8 && _c7 != _c5) { 
            _p01 = vec3(float(_C4.x), float(_C4.y), float(_C4.z));
            _p11 = _p01;
        } else {
            if (_c4 == _c8 && _c7 == _c5) { 
                _x0137 = 0;
                _y0137 = 0;
                _r0137 = 0;
                if (_c5 == _c6) { 
                    _x0137 = 1;
                } else {
                    if (_c4 == _c6) { 
                        _y0137 = 1;
                    } 
                } 
                if (_c5 == _d1) { 
                    _x0137 = _x0137 + 1;
                } else {
                    if (_c4 == _d1) { 
                        _y0137 = _y0137 + 1;
                    } 
                } 
                if (_x0137 <= 1) { 
                    _r0137 = 1;
                } 
                if (_y0137 <= 1) { 
                    _r0137 = _r0137 - 1;
                } 
                _x0139 = 0;
                _y0139 = 0;
                _r0139 = 0;
                if (_c5 == _c3) { 
                    _x0139 = 1;
                } else {
                    if (_c4 == _c3) { 
                        _y0139 = 1;
                    } 
                } 
                if (_c5 == _c1) { 
                    _x0139 = _x0139 + 1;
                } else {
                    if (_c4 == _c1) { 
                        _y0139 = _y0139 + 1;
                    } 
                } 
                if (_x0139 <= 1) { 
                    _r0139 = 1;
                } 
                if (_y0139 <= 1) { 
                    _r0139 = _r0139 - 1;
                } 
                _r1 = _r0137 + _r0139;
                _x0141 = 0;
                _y0141 = 0;
                _r0141 = 0;
                if (_c5 == _d2) { 
                    _x0141 = 1;
                } else {
                    if (_c4 == _d2) { 
                        _y0141 = 1;
                    } 
                } 
                if (_c5 == _d5) { 
                    _x0141 = _x0141 + 1;
                } else {
                    if (_c4 == _d5) { 
                        _y0141 = _y0141 + 1;
                    } 
                } 
                if (_x0141 <= 1) { 
                    _r0141 = 1;
                } 
                if (_y0141 <= 1) { 
                    _r0141 = _r0141 - 1;
                } 
                _r1 = _r1 + _r0141;
                _x0143 = 0;
                _y0143 = 0;
                _r0143 = 0;
                if (_c5 == _c2) { 
                    _x0143 = 1;
                } else {
                    if (_c4 == _c2) { 
                        _y0143 = 1;
                    } 
                } 
                if (_c5 == _d4) { 
                    _x0143 = _x0143 + 1;
                } else {
                    if (_c4 == _d4) { 
                        _y0143 = _y0143 + 1;
                    } 
                } 
                if (_x0143 <= 1) { 
                    _r0143 = 1;
                } 
                if (_y0143 <= 1) { 
                    _r0143 = _r0143 - 1;
                } 
                _r1 = _r1 + _r0143;
                if (_r1 > 0) { 
                    _p01 = vec3(float(_C5.x), float(_C5.y), float(_C5.z));
                    _p11 = _p01;
                } else {
                    if (_r1 < 0) { 
                        _p01 = vec3(float(_C4.x), float(_C4.y), float(_C4.z));
                        _p11 = _p01;
                    } else {
                        _p01 = vec3(float((5.00000000E-001*(_C4 + _C5)).x), float((5.00000000E-001*(_C4 + _C5)).y), float((5.00000000E-001*(_C4 + _C5)).z));
                        _p11 = _p01;
                    } 
                } 
            } else {
                if (_c5 == _c8 && _c8 == _d1 && _c7 != _d2 && _c8 != _d0) { 
                    _p11 = vec3(float((2.50000000E-001*(3.00000000E+000*_C8 + _C7)).x), float((2.50000000E-001*(3.00000000E+000*_C8 + _C7)).y), float((2.50000000E-001*(3.00000000E+000*_C8 + _C7)).z));
                } else {
                    if (_c4 == _c7 && _c7 == _d2 && _d1 != _c8 && _c7 != _d6) { 
                        _p11 = vec3(float((2.50000000E-001*(3.00000000E+000*_C7 + _C8)).x), float((2.50000000E-001*(3.00000000E+000*_C7 + _C8)).y), float((2.50000000E-001*(3.00000000E+000*_C7 + _C8)).z));
                    } else {
                        _p11 = vec3(float((5.00000000E-001*(_C7 + _C8)).x), float((5.00000000E-001*(_C7 + _C8)).y), float((5.00000000E-001*(_C7 + _C8)).z));
                    } 
                } 
                if (_c5 == _c8 && _c5 == _c1 && _c4 != _c2 && _c5 != _c0) { 
                    _p01 = vec3(float((2.50000000E-001*(3.00000000E+000*_C5 + _C4)).x), float((2.50000000E-001*(3.00000000E+000*_C5 + _C4)).y), float((2.50000000E-001*(3.00000000E+000*_C5 + _C4)).z));
                } else {
                    if (_c4 == _c7 && _c4 == _c2 && _c1 != _c5 && _c4 != _d3) { 
                        _p01 = vec3(float((2.50000000E-001*(3.00000000E+000*_C4 + _C5)).x), float((2.50000000E-001*(3.00000000E+000*_C4 + _C5)).y), float((2.50000000E-001*(3.00000000E+000*_C4 + _C5)).z));
                    } else {
                        _p01 = vec3(float((5.00000000E-001*(_C4 + _C5)).x), float((5.00000000E-001*(_C4 + _C5)).y), float((5.00000000E-001*(_C4 + _C5)).z));
                    } 
                } 
            } 
        } 
    } 
    if (_c4 == _c8 && _c7 != _c5 && _c3 == _c4 && _c4 != _d2) { 
        _p10 = vec3(float((5.00000000E-001*(_C7 + _C4)).x), float((5.00000000E-001*(_C7 + _C4)).y), float((5.00000000E-001*(_C7 + _C4)).z));
    } else {
        if (_c4 == _c6 && _c5 == _c4 && _c3 != _c7 && _c4 != _d0) { 
            _p10 = vec3(float((5.00000000E-001*(_C7 + _C4)).x), float((5.00000000E-001*(_C7 + _C4)).y), float((5.00000000E-001*(_C7 + _C4)).z));
        } else {
            _p10 = vec3(float(_C7.x), float(_C7.y), float(_C7.z));
        } 
    } 
    if (_c7 == _c5 && _c4 != _c8 && _c6 == _c7 && _c7 != _c2) { 
        _p00 = vec3(float((5.00000000E-001*(_C7 + _C4)).x), float((5.00000000E-001*(_C7 + _C4)).y), float((5.00000000E-001*(_C7 + _C4)).z));
    } else {
        if (_c3 == _c7 && _c8 == _c7 && _c6 != _c4 && _c7 != _c0) { 
            _p00 = vec3(float((5.00000000E-001*(_C7 + _C4)).x), float((5.00000000E-001*(_C7 + _C4)).y), float((5.00000000E-001*(_C7 + _C4)).z));
        } else {
            _p00 = vec3(float(_C4.x), float(_C4.y), float(_C4.z));
        } 
    } 
    if (_fp.x < 5.00000000E-001) { 
        if (_fp.y < 5.00000000E-001) { 
            _p10 = _p00;
        } 
    } else {
        if (_fp.y < 5.00000000E-001) { 
            _p10 = _p01;
        } else {
            _p10 = _p11;
        } 
    } 
    _ret_0 = vec4(_p10.x, _p10.y, _p10.z, 1.00000000E+000);
    gl_FragColor = _ret_0;
    return;
} 
#endif
